package com.javaoop.movie_booking_app.model;

import jakarta.persistence.*;

/**
 * Represents a cinema hall within the movie booking system.
 * <p>
 * Each Hall entity stores information such as the unique identifier
 * and the type of the hall (e.g., Large, Small).
 * </p>
 * <p>
 * The hall type is represented by the {@link HallType} enumeration
 * and stored as a string in the database.
 * </p>
 */
@Entity
@Table(name = "Halls")
public class Hall {
    /**
     * Unique identifier for the hall.
     * This is the primary key and is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "hall_id", nullable = false, updatable = false)
    private Long hallId;

    /*
    // Uncomment if you want to store a unique name for the hall.
    @Column(name = "name", nullable = false, unique = true, length = 100)
    private String name;
    */

    /**
     * The type of the hall (e.g., Large, Small).
     * Stored as a string in the database.
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "hall_type", nullable = false, length = 20)
    private HallType hallType;

    /**
     * Default no-argument constructor required by JPA.
     */
    public Hall() {
    }

    /**
     * Constructs a Hall with the specified hall type.
     *
     * @param hallType the type of the hall
     */
    public Hall(HallType hallType) {
        this.hallType = hallType;
    }

    /**
     * Gets the unique identifier of the hall.
     *
     * @return the hall ID
     */
    public Long getHallId() {
        return hallId;
    }

    /**
     * Sets the unique identifier of the hall.
     * Usually managed by JPA and not set manually.
     *
     * @param hallId the hall ID to set
     */
    public void setHallId(Long hallId) {
        this.hallId = hallId;
    }

    /*
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    */

    /**
     * Gets the type of the hall.
     *
     * @return the hall type
     */
    public HallType getHallType() {
        return hallType;
    }

    /**
     * Sets the type of the hall.
     *
     * @param hallType the hall type to set
     */
    public void setHallType(HallType hallType) {
        this.hallType = hallType;
    }

    /**
     * Returns a string representation of this Hall,
     * including the hall ID and hall type.
     *
     * @return a string summarizing the hall details
     */
    @Override
    public String toString() {
        return "Hall{" +
                "hallId=" + hallId +
                // (name != null ? ", name='" + name + '\'' : "") + // if uncommented
                ", hallType='" + hallType + '\'' +
                '}';
    }
}
